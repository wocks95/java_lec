배열 (Array)
  1. 여러 개의 데이터를 하나의 이름으로 관리하는 자료구조이다.
  2. 동일한 타입을 가진 데이터를 하나의 배열에 저장할 수 있다. 타입이 다르면 함께 저장할 수 없다.
  3. 배열에 저장된 데이터들을 식별하기 위해서 인덱스를 활용한다.
  4. 배열에 저장된 데이터들의 순서에 따라 서로 다른 인덱스를 가진다. (첫 번째 데이터의 인덱스는 0이고, 두 번째 데이터의 인덱스는 1이다.)
  5. 용어 정리
    1) 배열이름 : array, 모든 데이터가 가지는 대표 이름
    2) 배열길이 : length, 저장된 데이터의 개수
    3) 인덱스   : index, 각 데이터들을 식별하기 위한 숫자(0부터 시작하는 정수값)
    4) 배열요소 : element, 각 데이터를 의미(배열이름과 대괄호[]와 인덱스를 조합해서 사용)


배열의 선언과 생성
  1. 일반 변수는 선언만 하면 바로 사용할 수 있다.
  2. 배열은 일반 변수와는 달리 선언과 생성 과정이 모두 필요하다.
  3. 배열의 선언
    1) int[] 배열이름 - 추천
    2) int 배열이름[]
  4. 배열의 생성
    배열이름 = new int[배열길이]
  5. 배열이 생성되면 배열의 모든 요소는 자동으로 초기화된다. (일반 변수는 생성되면 쓰레기 값을 가짐)
    0, 0.0, false, null


배열 길이
1. 배열 요소의 개수를 의미한다.
2. 배열이 생성된 이후에는 수정할 수 없다.
3. 배열 길이 필드값
   배열이름.length


배열 초기화
  1. 배열에 초기화 값들을 전달할 수 있다.
  2. 배열 선언과 초기화를 분리할 수 있다. 
    int[] 배열이름;
    배열이름 = new int[]{값1, 값2, 값3, ...}
  3. 배열 선언시에만 사용할 수 있는 초기화 방법이 있다.
    int[] 배열이름 = {값1, 값2, 값3, ...}


배열의 메모리 구조
  1. 배열은 참조 타입(Reference Type)이다.
  2. 배열의 모든 요소는 순서대로 메모리의 연속된 공간을 할당받는다.
  3. 2개의 메모리 공간이 사용된다.
    1) stack (스택)
      (1) 선언하면 만들어지는 변수들이 저장된다.
      (2) 선언된 중괄호 {} 영역을 벗어나면 자동으로 메모리에서 사라진다.
      (3) 지역 변수들이 저장된다.
      (4) 배열에서는 배열이름이 스택에 저장된다.
    2) heap (힙)
      (1) 생성하면(new) 만들어지는 변수들이 저장된다.
      (2) garbage collector 에 의해서 관리된다. 언제 메모리에서 사라지는지 알 수 없다.
      (3) 동적으로 메모리에 할당되는 것들이 저장된다.
      (4) 배열에서는 배열 요소 자체가 힙에 저장된다.

   int[] a = new int[] {10, 20, 30};
   -------   ----------------------
   stack     heap

   ┌--------------┐
  a│  0x10000000  │
   │--------------│
   │     ...      │
   │--------------│
   │      10      │0x10000000
   │--------------│
   │      20      │0x10000004
   │--------------│
   │      30      │0x10000008
   └--------------┘