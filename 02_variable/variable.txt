메모리
  1. 램(RAM)
  2. 휘발성 : 컴퓨터 전원이 켜져있는동안만 데이터가 저장되고, 전원을 끄면 데이터가 모두 지워진다.
  3. 역할 : 현재 실행 중인 프로그램이 저장되는 장소이다.
  4. 1바이트마다 16진수로 된 고유의 번호를 부여해서 관리한다.
     1) 주소값
     2) 참조값
     3) 16진수 작성 예시 : 0x123abc456 (16진수 표기는 0x 또는 0X로 시작한다.)

변수(Variable)
  1. 어떤 값을 저장하기 위해 메모리에 할당된 공간을 의미한다.
  2. 모든 변수는 선언 과정이 필요하다. 반드시 변수를 선언해야 사용할 수 있다.
  3. 변수명은 임의로 정한다.
  4. 저장하려는 데이터의 종류에 따라 2가지로 구분한다.
    1) 기본 자료형(Primitive Type)
    2) 참조 자료형(Reference Type)

사용 가능한 식별자
1. 영문
2. 한글
3. 숫자 (숫자로 시작은 불가능)
4. 특수문자 (_, $)
5. 키워드는 식별자로 사용 불가

식별자의 이름 규칙
1. Pascal Case : 각 단어의 첫 글자는 대문자, 나머지는 소문자 (클래스)
2. Camel Case  : Pascal Case와 동일하지만, 첫 글자는 소문자 (메소드, 변수)
3. Snake Case  : 각 단어의 연결을 밑줄(_)로 하는 방식 (상수)

기본 자료형(Primitive Type)
  1. 값 자체를 저장하는 RAW DATA 타입이다.
  2. 8가지 타입이 제공된다.
    1) byte
    2) short
    3) int
    4) long
    5) char
    6) float
    7) double
    8) boolean

참조 자료형(Reference Type)
  1. 값이 저장된 참조값을 저장하는 REFERENCE DATA 타입이다.
  2. Primitive Type 을 제외한 모든 데이터는 참조 자료형이다.
  3. String 클래스
    1) 문자열을 관리하는 클래스이다.
    2) 문자열을 저장하는 타입으로 사용한다.
    3) 참조 자료형이지만 마치 기본 자료형처럼 쉬운 사용을 제공한다.
    
    String str = "king";
    
    ┌-------------┐
    |  0x12345678 | str
    |-------------|
    |             |
    |-------------|
    |             |
    |-------------|
    |     king    | 0x12345678
    |-------------|
    |             |
    └-------------┘